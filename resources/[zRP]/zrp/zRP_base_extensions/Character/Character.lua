---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by Muulfz.
--- DateTime: 11/17/2018 7:54 PM
---
local config = zRPBase.config

-- return character id or nil in case of error (if not found, will create it)
function zRP.getCharacterIdByIdentifiers(ids)
    if ids and #ids then
        -- search identifiers
        for i = 1, #ids do
            if not config.ignore_ip_identifier or (string.find(ids[i], "ip:") == nil) then
                -- ignore ip identifier
                local rows = zRP.query("zRP/characterid_byidentifier", { identifier = ids[i] })
                if #rows > 0 then
                    -- found
                    return rows[1].character_id
                end
            end
        end

        -- no ids found, create character
        local rows, affected = zRP.query("zRP/create_character", {})

        if #rows > 0 then
            local character_id = rows[1].id
            -- add identifiers
            for l, w in pairs(ids) do
                if not config.ignore_ip_identifier or (string.find(w, "ip:") == nil) then
                    -- ignore ip identifier
                    zRP.execute("zRP/add_identifier", { character_id = character_id, identifier = w })
                end
            end
            return character_id
        end
    end
end

function zRP.getCharactersIdsByUser(user_id)
    if user_id then
        local rows = zRP.query("zRP/getcharacters_byuser", { user_id = user_id })
        if #rows > 0 then
            return rows
        end

        local rows, affected = zRP.query("zRP/create_new_character", { user_id = user_id })
        zRP.users_characters_list[user_id] = { [rows[1].id] = { ["active"] = true } }
        zRP.setUData(user_id, "zRP:character_list", json.encode(zRP.users_characters_list[user_id]))

        if #rows > 0 then
            return rows
        end
    end
end

function zRP.getCharacterActiveId(user_id, characters_table)
    for i = 1, #characters_table do
        local checkuser = zRP.checkCharacterIsActived(user_id, characters_table[i].id)
        if checkuser  then
            return checkuser
        end
    end
end

function zRP.checkCharacterIsActived(user_id, character_id)
    local character_lis = zRP.users_characters_list[user_id]
    if character_lis then
        for k, v in pairs(character_lis) do
            if v.active then
                return k
            end
        end
    end
    return false
end

function zRP.setCData(character_id, key, value)
    zRP.exedcute("zRP/set_characterdata",{character_id = character_id, key =  key, value = value})

end

function zRP.getCharacterTmpTable(character_id)
    return zRP.character_tmp_tables[character_id]
end

function zRP.getCHaracterDataTable(character_id)
    return zRP.character_tables[character_id]
end