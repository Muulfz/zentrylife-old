---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by Muulfz.
--- DateTime: 12/4/2018 5:16 PM
---

local lang = zRP.lang.basic_menu


function zRPMenu.player_fixhair(player, choice)
    local custom = {}
    local user_id = zRP.getUserId(player)
    local value = zRP.getUData(user_id,"zRP:head:overlay")
    if value ~= nil then
        custom = json.decode(value)
        zRPclient._setOverlay(player,custom,true)
    end
end

function zRPMenu.player_store_armor(player, choice)
    local user_id = zRP.getUserId(player)
    if user_id ~= nil then
        local armour = zRPclient.getArmour(player)
        if armour > 95 then
            zRP.giveInventoryItem(user_id, lang.bodyarmor.id(), 1, true)
            -- clear armor
            zRPclient.setArmour(player,0,false)
        else
            zRPclient.notify(player, lang.bodyarmor.damaged())
        end
    end
end

function zRPMenu.player_store_money(player, choice)
    local user_id = zRP.getUserId(player)
    if user_id ~= nil then
        local amount = zRP.getMoney(user_id)
        if zRP.tryPayment(user_id, amount) then -- unpack the money
            zRP.giveInventoryItem(user_id, "money", amount, true)
        end
    end
end

function zRPMenu.player_playerCheck(player,nplayer)
    local nplayer_check = zRPclient.getNearestPlayers(player, 15)
    local is_ok = false
    for k, v in pairs(nplayer_check) do
        if k == nplayer then
            is_ok = true
        end
    end

    local nuser_id = zRP.getUserId(nplayer)
    if is_ok then
        zRPclient.notify(nplayer,lang.police.menu.check.checked())
        local weapons = zRPclient.getWeapons(nplayer)
        -- prepare display data (money, items, weapons)
        local money = zRP.getMoney(nuser_id)
        local items = ""
        local data = zRP.getUserDataTable(nuser_id)
        if data and data.inventory then
            for k,v in pairs(data.inventory) do
                local item_name = zRP.getItemName(k)
                if item_name then
                    items = items.."<br />"..item_name.." ("..v.amount..")"
                end
            end
        end

        local weapons_info = ""
        for k,v in pairs(weapons) do
            weapons_info = weapons_info.."<br />"..k.." ("..v.ammo..")"
        end

        zRPclient.setDiv(player,"police_check",".div_police_check{ background-color: rgba(0,0,0,0.75); color: white; font-weight: bold; width: 500px; padding: 10px; margin: auto; margin-top: 150px; }",lang.police.menu.check.info({money,items,weapons_info}))
        -- request to hide div
        local ok = zRP.request(player, lang.police.menu.check.request_hide(), 1000)
        zRPclient.removeDiv(player,"police_check")
    else
        zRPclient.notify(player,lang.common.no_player_near())
    end
end

function zRPMenu.player_store_weapons(player, choice)
    local user_id = zRP.getUserId(player)
    if user_id ~= nil then
        local weapons = zRPclient.getWeapons(player)
        for k,v in pairs(weapons) do
            -- convert weapons to parametric weapon items
            zRP.giveInventoryItem(user_id, "wbody|"..k, 1, true)
            if v.ammo > 0 then
                zRP.giveInventoryItem(user_id, "wammo|"..k, v.ammo, true)
            end
        end

        -- clear all weapons
        zRPclient.giveWeapons(player,{},true)
    end
end

local player_lists = {}
--TODO Ainda nao esta funcional
function zRPMenu.player_userlist(player, choice)
    local user_id = zRP.getUserId(player)
    if user_id ~= nil then
        if player_lists[player] then -- hide
            player_lists[player] = nil
            zRPclient.removeDiv(player,"user_list")
        else -- show
            local content = "<span class=\"id\">"..lang.userlist.id().."</span><span class=\"pseudo\">"..lang.userlist.nickname().."</span><span class=\"name\">"..lang.userlist.rpname().."</span><span class=\"job\">"..lang.userlist.job().."</span>"
            local count = 0
            local users = zRP.getUsers()
            for k,v in pairs(users) do
                count = count+1
                local source = zRP.getUserSource(k)
                local identity = zRP.getUserIdentity(k)
                if source ~= nil then
                    content = content.."<br /><span class=\"id\">"..k.."</span><span class=\"pseudo\">"..zRP.getPlayerName(source).."</span>"
                    if identity then
                        content = content.."<span class=\"name\">"..htmlEntities.encode(identity.firstname).." "..htmlEntities.encode(identity.name).."</span><span class=\"job\">"..zRP.getUserGroupByType(k,"job").."</span>"
                    end
                end

                -- check end
                count = count-1
                if count == 0 then
                    player_lists[player] = true
                    local css = [[
              .div_user_list{
                margin: auto;
				text-align: left;
                padding: 8px;
                width: 650px;
                margin-top: 100px;
                background: rgba(50,50,50,0.0);
                color: white;
                font-weight: bold;
                font-size: 1.1em;
              }
              .div_user_list span{
				display: inline-block;
				text-align: center;
              }
              .div_user_list .id{
                color: rgb(255, 255, 255);
                width: 45px;
              }
              .div_user_list .pseudo{
                color: rgb(66, 244, 107);
                width: 145px;
              }
              .div_user_list .name{
                color: rgb(92, 170, 249);
                width: 295px;
              }
			  .div_user_list .job{
                color: rgb(247, 193, 93);
                width: 145px;
			  }
            ]]
                    zRPclient.setDiv(player,"user_list", css, content)
                end
            end
        end
    end
end

function zRPMenu.player_mobilepay(player, choice)
    local user_id = zRP.getUserId(player)
    local menu = {}
    menu.name = lang.basic_menu.phone.directory.title()
    menu.css = {top = "75px", header_color = "rgba(0,0,255,0.75)"}
    menu.onclose = function(player) zRP.openQuickMenu(player) end -- nest menu
    menu[lang.mpay.type.button()] = {
        -- payment function
        function(player,choice)
            local phone = zRP.prompt(player,lang.basic_menu.mpay.type.prompt,"")
            if phone ~= nil and phone ~= "" then
                zRP.payPhoneNumber(user_id,phone)
            else
                zRPclient.notify(player,lang.common.invalid_value())
            end
        end,lang.basic_menu.mpay.type.desc()}
    local directory = zRP.getPhoneDirectory(user_id)
    for k,v in pairs(directory) do
        menu[k] = {
            -- payment function
            function(player,choice)
                zRP.payPhoneNumber(user_id,v)
            end
        ,v} -- number as description
    end
    zRP.openMenu(player, menu)
end

function zRPMenu.player_mobilecharge(player, choice)
    local user_id = zRP.getUserId(player)
    local menu = {}
    menu.name = lang.basic_menu.phone.directory.title()
    menu.css = {top = "75px", header_color = "rgba(0,0,255,0.75)"}
    menu.onclose = function(player) zRP.openQuickMenu(player) end -- nest menu
    menu[lang.mcharge.type.button()] = {
        -- payment function
        function(player,choice)
            local phone = zRP.prompt(player,lang.basic_menu.mcharge.type.prompt(),"")
            if phone ~= nil and phone ~= "" then
                zRP.chargePhoneNumber(user_id,phone)
            else
                zRPclient.notify(player,lang.common.invalid_value())
            end
        end,lang.basic_menu.mcharge.type.desc()}
    local directory = zRP.getPhoneDirectory(user_id)
    for k,v in pairs(directory) do
        menu[k] = {
            -- payment function
            function(player,choice)
                zRP.chargePhoneNumber(user_id,v)
            end
        ,v} -- number as description
    end
    zRP.openMenu(player, menu)
end


--- menu

function zRPMenu.player_menu(player, choice)
    local user_id = zRP.getUserId(player)
    local menu = {}
    menu.name = lang.player.button()
    menu.css = {top = "75px", header_color = "rgba(0,0,255,0.75)"}
    menu.onclose = function(player) zRP.openQuickMenu(player) end -- nest menu

    menu[lang.aptitude.title()] = {zRPMenu.apitude_aptitude,lang.aptitude.description()}
-------------------------------IMPLEMENTACAO
    zRP.openMenu(player, menu)
end
