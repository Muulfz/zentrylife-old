---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by Muulfz.
--- DateTime: 1/5/2019 4:32 PM
---


-- get money
-- cbreturn nil if error
function zRP.getMoneyUSD(user_id)
    local tmp = zRP.getUserTmpTable(user_id)
    if tmp then
        return tmp.money.usd_wallet or 0
    else
        return 0
    end
end

-- set money
function zRP.setMoneyUSD(user_id,value)
    local tmp = zRP.getUserTmpTable(user_id)
    Debug.log("[ECONOMY LOG] User_id: "..user_id.." Player Money USD modify "..tmp.money.usd_wallet .." TO => "..value )
    if tmp then
        tmp.money.usd_wallet = value
    end
end

-- try a payment
-- return true or false (debited if true)
function zRP.tryPaymentUSD(user_id,amount)
    local money = zRP.getMoneyUSD(user_id)
    if amount >= 0 and money >= amount then
        zRP.setMoneyUSD(user_id,money-amount)
        return true
    else
        return false
    end
end

-- give money
function zRP.giveMoneyUSD(user_id,amount)
    if amount > 0 then
        local money = zRP.getMoneyUSD(user_id)
        zRP.setMoneyUSD(user_id,money+amount)
    end
end

-- get bank money
function zRP.getBankMoneyUSD(user_id)
    local tmp = zRP.getUserTmpTable(user_id)
    if tmp then
        return tmp.money.usd_bank or 0
    else
        return 0
    end
end

-- set bank MoneyUSD
function zRP.setBankMoneyUSD(user_id,value)
    local tmp = zRP.getUserTmpTable(user_id)
    Debug.log("[ECONOMY LOG] User_id: "..user_id.." Player BankMoney USD modify "..tmp.money.usd_bank .." TO => "..value)
    if tmp then
        tmp.money.usd_bank = value
    end
end

-- give bank money
function zRP.giveBankMoneyUSD(user_id,amount)
    if amount > 0 then
        local money = zRP.getBankMoneyUSD(user_id)
        zRP.setBankMoneyUSD(user_id,money+amount)
    end
end

-- try a withdraw
-- return true or false (withdrawn if true)
function zRP.tryWithdrawUSD(user_id,amount)
    local money = zRP.getBankMoneyUSD(user_id)
    if amount >= 0 and MoneyUSD >= amount then
        zRP.setBankMoneyUSD(user_id,money-amount)
        zRP.giveMoneyUSD(user_id,amount)
        return true
    else
        return false
    end
end

-- try a deposit
-- return true or false (deposited if true)
function zRP.tryDepositUSD(user_id,amount)
    if amount >= 0 and zRP.tryPayment(user_id,amount) then
        zRP.giveBankMoneyUSD(user_id,amount)
        return true
    else
        return false
    end
end

-- try full payment (wallet + bank to complete payment)
-- return true or false (debited if true)
function zRP.tryFullPaymentUSD(user_id,amount)
    local money = zRP.getMoneyUSD(user_id)
    if money >= amount then -- enough, simple payment
        return zRP.tryPaymentUSD(user_id, amount)
    else  -- not enough, withdraw -> payment
        if zRP.tryWithdrawUSD(user_id, amount-money) then -- withdraw to complete amount
            return zRP.tryPaymentUSD(user_id, amount)
        end
    end

    return false
end


------------------------------------- EURO --------------------------------


-- get money
-- cbreturn nil if error
function zRP.getMoneyEUR(user_id)
    local tmp = zRP.getUserTmpTable(user_id)
    if tmp then
        return tmp.money.eur_wallet or 0
    else
        return 0
    end
end

-- set money
function zRP.setMoneyEUR(user_id,value)
    local tmp = zRP.getUserTmpTable(user_id)
    Debug.log("[ECONOMY LOG] User_id: "..user_id.." Player Money EUR modify "..tmp.money.eur_wallet .." TO => "..value )
    if tmp then
        tmp.money.eur_wallet = value
    end
end

-- try a payment
-- return true or false (debited if true)
function zRP.tryPaymentEUR(user_id,amount)
    local money = zRP.getMoneyEUR(user_id)
    if amount >= 0 and money >= amount then
        zRP.setMoneyEUR(user_id,money-amount)
        return true
    else
        return false
    end
end

-- give money
function zRP.giveMoneyEUR(user_id,amount)
    if amount > 0 then
        local money = zRP.getMoneyEUR(user_id)
        zRP.setMoneyEUR(user_id,money+amount)
    end
end

-- get bank money
function zRP.getBankMoneyEUR(user_id)
    local tmp = zRP.getUserTmpTable(user_id)
    if tmp then
        return tmp.money.eur_bank or 0
    else
        return 0
    end
end

-- set bank MoneyEUR
function zRP.setBankMoneyEUR(user_id,value)
    local tmp = zRP.getUserTmpTable(user_id)
    Debug.log("[ECONOMY LOG] User_id: "..user_id.." Player BankMoney EUR modify "..tmp.money.eur_bank .." TO => "..value)
    if tmp then
        tmp.money.eur_bank = value
    end
end

-- give bank money
function zRP.giveBankMoneyEUR(user_id,amount)
    if amount > 0 then
        local money = zRP.getBankMoneyEUR(user_id)
        zRP.setBankMoneyEUR(user_id,money+amount)
    end
end

-- try a withdraw
-- return true or false (withdrawn if true)
function zRP.tryWithdrawEUR(user_id,amount)
    local money = zRP.getBankMoneyEUR(user_id)
    if amount >= 0 and MoneyEUR >= amount then
        zRP.setBankMoneyEUR(user_id,money-amount)
        zRP.giveMoneyEUR(user_id,amount)
        return true
    else
        return false
    end
end

-- try a deposit
-- return true or false (deposited if true)
function zRP.tryDepositEUR(user_id,amount)
    if amount >= 0 and zRP.tryPaymentEUR(user_id,amount) then
        zRP.giveBankMoneyEUR(user_id,amount)
        return true
    else
        return false
    end
end

-- try full payment (wallet + bank to complete payment)
-- return true or false (debited if true)
function zRP.tryFullPaymentEUR(user_id,amount)
    local money = zRP.getMoneyEUR(user_id)
    if money >= amount then -- enough, simple payment
        return zRP.tryPaymentEUR(user_id, amount)
    else  -- not enough, withdraw -> payment
        if zRP.tryWithdrawEUR(user_id, amount-money) then -- withdraw to complete amount
            return zRP.tryPaymentEUR(user_id, amount)
        end
    end

    return false
end