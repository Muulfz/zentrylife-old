---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by Muulfz.
--- DateTime: 12/15/2018 10:34 AM
---
--TODO exporta para c#

local config = module("cfg/Modules/Economy/currency")

zRP.currency = {
    default = {},
    special = {}
}
function zRP.currencyUpdate()
    local currencyTime = zRP.getSCurrencyTime("zRP:currency_default")
    if currencyTime then
        if os.time() >= currencyTime + config.currency_reset_time * 60 then
            zRP.updateCurrency()
            zRP.updateCurrencyEspecials()
            for i = 1, #zRP.currency.default do
                zRP.currency.default[i]:removeSelf()
                zRP.currency.default[i] = nil
            end
            for i = 1, #zRP.currency.special do
                zRP.currency.special[i]:removeSelf()
                zRP.currency.special[i] = nil
            end
        end
    else
        zRP.updateCurrency()
        zRP.updateCurrencyEspecials()
    end
    zRP.getCurrency()
end

function zRP.updateCurrency()
    local url = "http://www.floatrates.com/daily/BRL.json"
    local method = "GET"
    PerformHttpRequest(url, function(code, result, headers)
        zRP.setSCurrency("zRP:currency_default", result)
        cb(0, nil)
    end, method)
end

function zRP.updateCurrencyEspecials()
    local url = "data.fixer.io/api/latest?access_key=" .. config.fixerApikey
    local method = "GET"
    PerformHttpRequest(url, function(code, result, headers)
        zRP.setSCurrency("zRP:currency_special", result)
        cb(0, nil)
    end, method)
end

function zRP.setSCurrency(key, value)
    local time = os.time()
    zRP.execute("zRP/set_srvcurrency", { key = key, value = value, last_time_update = time })
end

function zRP.getSCurrency(key, cbr)
    local rows = zRP.query("zRP/get_srvcurrency", { key = key })
    if #rows > 0 then
        return rows[1].dvalue
    else
        return ""
    end
end

function zRP.getSCurrencyTime(key, cbr)
    local rows = zRP.query("zRP/get_srvcurrency_time", { key = key })
    if #rows > 0 then
        return rows[1].last_time_update
    else
        return false
    end
end

function zRP.getCurrency()
    zRP.getCurrencyEspecialTable()
    zRP.getCurrencyTable()
end

function zRP.getCurrencyTable()
    local data = zRP.getSCurrency("zRP:currency_default")
    zRP.currency.default = json.decode(data) or {}
end

function zRP.getCurrencyEspecialTable()
    local data = zRP.getSCurrency("zRP:currency_special")
    zRP.currency.special = json.decode(data) or {}
end

Citizen.CreateThread(function()
    Citizen.Wait(3000)
    while true do
        zRP.currencyUpdate()
        Citizen.Wait(600000)
    end
end)
